<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
  
  <bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
    <property name="loginFormUrl" value="/login" />
    <property name="forceHttps" value="false" />
  </bean>

  
 
  <bean id="myAuthFilter" class="com.tscp.toolkit.web.security.authentication.MyAuthenticationProcessingFilter">
    <property name="sessionAuthenticationStrategy" ref="sas" />
    <property name="authenticationManager" ref="toolkitAuthentication" />
    <property name="authenticationFailureHandler" ref="failureHandler" />
    <property name="authenticationSuccessHandler" ref="successHandler" />
  </bean>

  <bean id="successHandler" class="com.tscp.toolkit.web.security.authentication.MySavedRequestAwareAuthenticationSuccessHandler">
    <!-- <bean id="successHandler" class="SavedRequestAwareAuthenticationSuccessHandler">-->
    <property name="defaultTargetUrl" value="/manage" />
  </bean>

  <bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
    <property name="defaultFailureUrl" value="/login?login_error=1" />
  </bean>

  <bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    <property name="maximumSessions" value="1" />
  </bean>

  <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  <!-- End Concurrency Filters -->

  <!-- Begin Custom UserDetailsService -->
  <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
    <property name="providers">
      <list>
        <ref local="daoAuthenticationProvider" />
      </list>
    </property>
  </bean>

  <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <property name="userDetailsService" ref="myUserDetailsService" />
  </bean>
 
  <bean id="myUserDetailsService" class="com.tscp.toolkit.web.security.authentication.MyUserDetailsService">
    <!-- <property name="userManager" ref="userManager" /> -->
    <!-- <property name="userManager" ref="UserToolkitManager" /> -->
  </bean>

  <sec:authentication-manager alias="toolkitAuthentication">
    <sec:authentication-provider user-service-ref="myUserDetailsService">
      <sec:password-encoder hash="md5" />
    </sec:authentication-provider>
  </sec:authentication-manager>
  <!-- End Custom UserDetailsService -->

</beans>